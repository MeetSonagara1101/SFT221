

Unit testing is a technique used to test small parts, or units, of code independently to ensure they work as expected. For example, you might test a function that retrieves customer information. By focusing on small portions of code, it's easier to detect and fix bugs. If there's an issue, automated tests can quickly pinpoint it. In my recent project, I employed unit testing to ensure the `getCustomerInfo` function functioned correctly. The tests included various scenarios, even checking for invalid inputs like blank lines. If a user enters a blank line, a notification appears, preventing errors. Besides automated testing, manual testing was also conducted to cover diverse scenarios and ensure the software meets user expectations. Combining both approaches—automated and manual testing—ensures comprehensive testing, maintaining functionality and user satisfaction as the code evolves.